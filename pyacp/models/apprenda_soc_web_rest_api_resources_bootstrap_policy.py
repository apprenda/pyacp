# coding: utf-8

"""
    Platform Operations Rest API

    The Platform Operations REST API can be leveraged to customize the Platform Operator experience of managing infrastructure and applications for the Apprenda Platform. This allows some of the functionality of the Platform's System Operations Center (SOC) to be accomplished through a variety of means such as custom-built UX or command-line interfaces.   For more information about the abilities of Platform Operators, see our documentation on the [SOC](/current/SOC).   ##Authentication   Before making a request, you must be authenticated. Learn how to [get authenticated](/restapi/platformops/v1/authentication).   ##Making a Request   ###Prerequisites   * Installed Platform of version 6.5.1 or later (Note that most endpoints are only available in verison 6.7.0 and later)    * Authentication token   * If SOC authorization is enabled on your Platform, you must be assigned as an active Platform Operator   ###Request URL   All requests must use **https**.   The URL for every request you make is the Cloud URI of your Platform followed by \"/soc\" and the path structure of the endpoint. For example, if your Cloud URI is apps.apprenda.harp and you want to get the Add-ons for your Platform, the request URI will be **apps.apprenda.harp/soc/api/v1/addons**.   For more information, see our documentation on [using API resources](/restapi/platformops/v1/using-resources) and [finding your Cloud URI](/current/clouduri).   ###Request Headers   Your authenication token must be passed in the header of all requests using the key **ApprendaSessionToken** (not case sensitive).  

    OpenAPI spec version: v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class ApprendaSOCWebRestAPIResourcesBootstrapPolicy(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, id=None, href=None, name=None, description=None, priority=None, is_active=None, is_applied_to_dot_net=None, is_applied_to_java=None, path=None, is_always_applied=None, is_applied_to_sandbox_stage=None, is_applied_to_published_stage=None, custom_property_model_id=None, comparison_property_source=None, comparison_type=None, values=None):
        """
        ApprendaSOCWebRestAPIResourcesBootstrapPolicy - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'id': 'str',
            'href': 'str',
            'name': 'str',
            'description': 'str',
            'priority': 'int',
            'is_active': 'bool',
            'is_applied_to_dot_net': 'bool',
            'is_applied_to_java': 'bool',
            'path': 'str',
            'is_always_applied': 'str',
            'is_applied_to_sandbox_stage': 'bool',
            'is_applied_to_published_stage': 'bool',
            'custom_property_model_id': 'int',
            'comparison_property_source': 'str',
            'comparison_type': 'str',
            'values': 'list[str]'
        }

        self.attribute_map = {
            'id': 'id',
            'href': 'href',
            'name': 'name',
            'description': 'description',
            'priority': 'priority',
            'is_active': 'isActive',
            'is_applied_to_dot_net': 'isAppliedToDotNet',
            'is_applied_to_java': 'isAppliedToJava',
            'path': 'path',
            'is_always_applied': 'isAlwaysApplied',
            'is_applied_to_sandbox_stage': 'isAppliedToSandboxStage',
            'is_applied_to_published_stage': 'isAppliedToPublishedStage',
            'custom_property_model_id': 'customPropertyModelId',
            'comparison_property_source': 'comparisonPropertySource',
            'comparison_type': 'comparisonType',
            'values': 'values'
        }

        self._id = id
        self._href = href
        self._name = name
        self._description = description
        self._priority = priority
        self._is_active = is_active
        self._is_applied_to_dot_net = is_applied_to_dot_net
        self._is_applied_to_java = is_applied_to_java
        self._path = path
        self._is_always_applied = is_always_applied
        self._is_applied_to_sandbox_stage = is_applied_to_sandbox_stage
        self._is_applied_to_published_stage = is_applied_to_published_stage
        self._custom_property_model_id = custom_property_model_id
        self._comparison_property_source = comparison_property_source
        self._comparison_type = comparison_type
        self._values = values

    @property
    def id(self):
        """
        Gets the id of this ApprendaSOCWebRestAPIResourcesBootstrapPolicy.

        :return: The id of this ApprendaSOCWebRestAPIResourcesBootstrapPolicy.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """
        Sets the id of this ApprendaSOCWebRestAPIResourcesBootstrapPolicy.

        :param id: The id of this ApprendaSOCWebRestAPIResourcesBootstrapPolicy.
        :type: str
        """

        self._id = id

    @property
    def href(self):
        """
        Gets the href of this ApprendaSOCWebRestAPIResourcesBootstrapPolicy.

        :return: The href of this ApprendaSOCWebRestAPIResourcesBootstrapPolicy.
        :rtype: str
        """
        return self._href

    @href.setter
    def href(self, href):
        """
        Sets the href of this ApprendaSOCWebRestAPIResourcesBootstrapPolicy.

        :param href: The href of this ApprendaSOCWebRestAPIResourcesBootstrapPolicy.
        :type: str
        """

        self._href = href

    @property
    def name(self):
        """
        Gets the name of this ApprendaSOCWebRestAPIResourcesBootstrapPolicy.

        :return: The name of this ApprendaSOCWebRestAPIResourcesBootstrapPolicy.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """
        Sets the name of this ApprendaSOCWebRestAPIResourcesBootstrapPolicy.

        :param name: The name of this ApprendaSOCWebRestAPIResourcesBootstrapPolicy.
        :type: str
        """

        self._name = name

    @property
    def description(self):
        """
        Gets the description of this ApprendaSOCWebRestAPIResourcesBootstrapPolicy.

        :return: The description of this ApprendaSOCWebRestAPIResourcesBootstrapPolicy.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """
        Sets the description of this ApprendaSOCWebRestAPIResourcesBootstrapPolicy.

        :param description: The description of this ApprendaSOCWebRestAPIResourcesBootstrapPolicy.
        :type: str
        """

        self._description = description

    @property
    def priority(self):
        """
        Gets the priority of this ApprendaSOCWebRestAPIResourcesBootstrapPolicy.

        :return: The priority of this ApprendaSOCWebRestAPIResourcesBootstrapPolicy.
        :rtype: int
        """
        return self._priority

    @priority.setter
    def priority(self, priority):
        """
        Sets the priority of this ApprendaSOCWebRestAPIResourcesBootstrapPolicy.

        :param priority: The priority of this ApprendaSOCWebRestAPIResourcesBootstrapPolicy.
        :type: int
        """

        self._priority = priority

    @property
    def is_active(self):
        """
        Gets the is_active of this ApprendaSOCWebRestAPIResourcesBootstrapPolicy.

        :return: The is_active of this ApprendaSOCWebRestAPIResourcesBootstrapPolicy.
        :rtype: bool
        """
        return self._is_active

    @is_active.setter
    def is_active(self, is_active):
        """
        Sets the is_active of this ApprendaSOCWebRestAPIResourcesBootstrapPolicy.

        :param is_active: The is_active of this ApprendaSOCWebRestAPIResourcesBootstrapPolicy.
        :type: bool
        """

        self._is_active = is_active

    @property
    def is_applied_to_dot_net(self):
        """
        Gets the is_applied_to_dot_net of this ApprendaSOCWebRestAPIResourcesBootstrapPolicy.

        :return: The is_applied_to_dot_net of this ApprendaSOCWebRestAPIResourcesBootstrapPolicy.
        :rtype: bool
        """
        return self._is_applied_to_dot_net

    @is_applied_to_dot_net.setter
    def is_applied_to_dot_net(self, is_applied_to_dot_net):
        """
        Sets the is_applied_to_dot_net of this ApprendaSOCWebRestAPIResourcesBootstrapPolicy.

        :param is_applied_to_dot_net: The is_applied_to_dot_net of this ApprendaSOCWebRestAPIResourcesBootstrapPolicy.
        :type: bool
        """

        self._is_applied_to_dot_net = is_applied_to_dot_net

    @property
    def is_applied_to_java(self):
        """
        Gets the is_applied_to_java of this ApprendaSOCWebRestAPIResourcesBootstrapPolicy.

        :return: The is_applied_to_java of this ApprendaSOCWebRestAPIResourcesBootstrapPolicy.
        :rtype: bool
        """
        return self._is_applied_to_java

    @is_applied_to_java.setter
    def is_applied_to_java(self, is_applied_to_java):
        """
        Sets the is_applied_to_java of this ApprendaSOCWebRestAPIResourcesBootstrapPolicy.

        :param is_applied_to_java: The is_applied_to_java of this ApprendaSOCWebRestAPIResourcesBootstrapPolicy.
        :type: bool
        """

        self._is_applied_to_java = is_applied_to_java

    @property
    def path(self):
        """
        Gets the path of this ApprendaSOCWebRestAPIResourcesBootstrapPolicy.

        :return: The path of this ApprendaSOCWebRestAPIResourcesBootstrapPolicy.
        :rtype: str
        """
        return self._path

    @path.setter
    def path(self, path):
        """
        Sets the path of this ApprendaSOCWebRestAPIResourcesBootstrapPolicy.

        :param path: The path of this ApprendaSOCWebRestAPIResourcesBootstrapPolicy.
        :type: str
        """

        self._path = path

    @property
    def is_always_applied(self):
        """
        Gets the is_always_applied of this ApprendaSOCWebRestAPIResourcesBootstrapPolicy.

        :return: The is_always_applied of this ApprendaSOCWebRestAPIResourcesBootstrapPolicy.
        :rtype: str
        """
        return self._is_always_applied

    @is_always_applied.setter
    def is_always_applied(self, is_always_applied):
        """
        Sets the is_always_applied of this ApprendaSOCWebRestAPIResourcesBootstrapPolicy.

        :param is_always_applied: The is_always_applied of this ApprendaSOCWebRestAPIResourcesBootstrapPolicy.
        :type: str
        """

        self._is_always_applied = is_always_applied

    @property
    def is_applied_to_sandbox_stage(self):
        """
        Gets the is_applied_to_sandbox_stage of this ApprendaSOCWebRestAPIResourcesBootstrapPolicy.

        :return: The is_applied_to_sandbox_stage of this ApprendaSOCWebRestAPIResourcesBootstrapPolicy.
        :rtype: bool
        """
        return self._is_applied_to_sandbox_stage

    @is_applied_to_sandbox_stage.setter
    def is_applied_to_sandbox_stage(self, is_applied_to_sandbox_stage):
        """
        Sets the is_applied_to_sandbox_stage of this ApprendaSOCWebRestAPIResourcesBootstrapPolicy.

        :param is_applied_to_sandbox_stage: The is_applied_to_sandbox_stage of this ApprendaSOCWebRestAPIResourcesBootstrapPolicy.
        :type: bool
        """

        self._is_applied_to_sandbox_stage = is_applied_to_sandbox_stage

    @property
    def is_applied_to_published_stage(self):
        """
        Gets the is_applied_to_published_stage of this ApprendaSOCWebRestAPIResourcesBootstrapPolicy.

        :return: The is_applied_to_published_stage of this ApprendaSOCWebRestAPIResourcesBootstrapPolicy.
        :rtype: bool
        """
        return self._is_applied_to_published_stage

    @is_applied_to_published_stage.setter
    def is_applied_to_published_stage(self, is_applied_to_published_stage):
        """
        Sets the is_applied_to_published_stage of this ApprendaSOCWebRestAPIResourcesBootstrapPolicy.

        :param is_applied_to_published_stage: The is_applied_to_published_stage of this ApprendaSOCWebRestAPIResourcesBootstrapPolicy.
        :type: bool
        """

        self._is_applied_to_published_stage = is_applied_to_published_stage

    @property
    def custom_property_model_id(self):
        """
        Gets the custom_property_model_id of this ApprendaSOCWebRestAPIResourcesBootstrapPolicy.

        :return: The custom_property_model_id of this ApprendaSOCWebRestAPIResourcesBootstrapPolicy.
        :rtype: int
        """
        return self._custom_property_model_id

    @custom_property_model_id.setter
    def custom_property_model_id(self, custom_property_model_id):
        """
        Sets the custom_property_model_id of this ApprendaSOCWebRestAPIResourcesBootstrapPolicy.

        :param custom_property_model_id: The custom_property_model_id of this ApprendaSOCWebRestAPIResourcesBootstrapPolicy.
        :type: int
        """

        self._custom_property_model_id = custom_property_model_id

    @property
    def comparison_property_source(self):
        """
        Gets the comparison_property_source of this ApprendaSOCWebRestAPIResourcesBootstrapPolicy.

        :return: The comparison_property_source of this ApprendaSOCWebRestAPIResourcesBootstrapPolicy.
        :rtype: str
        """
        return self._comparison_property_source

    @comparison_property_source.setter
    def comparison_property_source(self, comparison_property_source):
        """
        Sets the comparison_property_source of this ApprendaSOCWebRestAPIResourcesBootstrapPolicy.

        :param comparison_property_source: The comparison_property_source of this ApprendaSOCWebRestAPIResourcesBootstrapPolicy.
        :type: str
        """
        allowed_values = ["None", "Server", "ResourcePolicy", "Application", "Service", "UserInterface", "Database", "StorageQuota", "LinuxService", "War", "BootstrapPolicy", "DatabaseServer", "Developer", "All"]
        if comparison_property_source not in allowed_values:
            raise ValueError(
                "Invalid value for `comparison_property_source` ({0}), must be one of {1}"
                .format(comparison_property_source, allowed_values)
            )

        self._comparison_property_source = comparison_property_source

    @property
    def comparison_type(self):
        """
        Gets the comparison_type of this ApprendaSOCWebRestAPIResourcesBootstrapPolicy.

        :return: The comparison_type of this ApprendaSOCWebRestAPIResourcesBootstrapPolicy.
        :rtype: str
        """
        return self._comparison_type

    @comparison_type.setter
    def comparison_type(self, comparison_type):
        """
        Sets the comparison_type of this ApprendaSOCWebRestAPIResourcesBootstrapPolicy.

        :param comparison_type: The comparison_type of this ApprendaSOCWebRestAPIResourcesBootstrapPolicy.
        :type: str
        """
        allowed_values = ["ContainsAll", "DoesNotContainAll", "ContainsAny", "IsEmpty", "IsNotEmpty", "DoesNotContainAny"]
        if comparison_type not in allowed_values:
            raise ValueError(
                "Invalid value for `comparison_type` ({0}), must be one of {1}"
                .format(comparison_type, allowed_values)
            )

        self._comparison_type = comparison_type

    @property
    def values(self):
        """
        Gets the values of this ApprendaSOCWebRestAPIResourcesBootstrapPolicy.

        :return: The values of this ApprendaSOCWebRestAPIResourcesBootstrapPolicy.
        :rtype: list[str]
        """
        return self._values

    @values.setter
    def values(self, values):
        """
        Sets the values of this ApprendaSOCWebRestAPIResourcesBootstrapPolicy.

        :param values: The values of this ApprendaSOCWebRestAPIResourcesBootstrapPolicy.
        :type: list[str]
        """

        self._values = values

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, ApprendaSOCWebRestAPIResourcesBootstrapPolicy):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
